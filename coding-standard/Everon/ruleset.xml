<?xml version="1.0"?>
<ruleset name="Everon">
    <description>
        Everon Coding Standard.
    </description>

    <exclude-pattern>*/test_files/*</exclude-pattern>
    <exclude-pattern>*/tests/fixtures/*</exclude-pattern>
    <exclude-pattern>*/tests/App/*</exclude-pattern>

    <exclude-pattern>\.idea</exclude-pattern>
    <exclude-pattern>\.git</exclude-pattern>
    <exclude-pattern>*\.xml</exclude-pattern>
    <exclude-pattern>*\.css</exclude-pattern>
    <exclude-pattern>*\.js</exclude-pattern>
    <exclude-pattern>*\.yml</exclude-pattern>
    <exclude-pattern>*\.txt</exclude-pattern>
    <exclude-pattern>*\.json</exclude-pattern>

    <rule ref="SlevomatCodingStandard">
        <exclude name="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment.MultiLinePropertyComment"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
        <exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>
        <exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison.RequiredYodaComparison"/>
        <exclude name="SlevomatCodingStandard.Classes.ClassConstantVisibility.MissingConstantVisibility"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions.NonFullyQualifiedException"/>
        <exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName.NoMatchBetweenTypeNameAndFileName"/>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="1"/>
            <property name="linesCountBetweenUseTypes" value="0"/>
            <property name="linesCountBetweenUseTypes" value="1"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2"/>
            <property name="newlinesCountAfterDeclare" value="2"/>
            <property name="spacesCountAroundEqualsSign" value="1"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>

    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>

    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <property name="linesCountBeforeFirstContent" value="0"/>
            <property name="linesCountBetweenDescriptionAndAnnotations" value="1"/>
            <property name="linesCountBetweenDifferentAnnotationsTypes" value="1"/>
            <property name="linesCountAfterLastContent" value="0"/>
        </properties>
    </rule>

    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>

    <rule ref="PSR2" />
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <severity>0</severity>
    </rule>

    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength.TooLong">
        <severity>0</severity>
    </rule>
    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <severity>0</severity>
    </rule>



    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>

    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>

    <rule ref="PEAR.NamingConventions.ValidClassName"/>

    <rule ref="Squiz.Operators.ValidLogicalOperators"/>

    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>

    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>

    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

</ruleset>
